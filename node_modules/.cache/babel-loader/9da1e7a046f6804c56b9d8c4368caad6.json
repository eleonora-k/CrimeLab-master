{"ast":null,"code":"var _jsxFileName = \"/Users/eleonorakurilchik/Sites/CrimeLab/src/components/elements/MovieInfo.js\";\nimport React from 'react';\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport MovieThumb from './MovieThumb';\nimport { SMovieInfo } from '../styles/SMovieInfo';\nimport { calcTime } from '../../helpers';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({\n  movie\n}) => /*#__PURE__*/React.createElement(SMovieInfo, {\n  backdrop: movie.backdrop_path,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movieinfo-content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movieinfo-thumb\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(MovieThumb, {\n  image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n  clickable: false,\n  alt: \"moviethumb\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movieinfo-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }\n}, movie.title), /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }\n}, \"Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 17\n  }\n}, movie.overview), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"rating-director-time\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }\n}, \"IMDB Rating\"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"score\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }\n}, movie.vote_average)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"director\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }\n}, \"Director\", movie.directors.length > 1 ? 'S' : ''), movie.directors.map(element => /*#__PURE__*/React.createElement(\"p\", {\n  key: element.credit_id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 29\n  }\n}, element.name)), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"time\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }\n}, \"Duration\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }\n}, \" \", calcTime(movie.runtime), \" \"))))));\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/eleonorakurilchik/Sites/CrimeLab/src/components/elements/MovieInfo.js"],"names":["React","NoImage","IMAGE_BASE_URL","POSTER_SIZE","MovieThumb","SMovieInfo","calcTime","PropTypes","MovieInfo","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","credit_id","name","runtime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,cAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,kBAEd,oBAAC,UAAD;AAAY,EAAA,QAAQ,EAChBA,KAAK,CAACC,aADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGI;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,UAAD;AAAY,EAAA,KAAK,EACTD,KAAK,CAACE,WAAN,GAAqB,GAAET,cAAe,GAAEC,WAAY,GAChDM,KAAK,CAACE,WACT,EAFD,GAEKV,OAHb;AAKI,EAAA,SAAS,EAAE,KALf;AAMI,EAAA,GAAG,EAAC,YANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,eAUI;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIQ,KAAK,CAACG,KADV,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIH,KAAK,CAACI,QADV,CALJ,eASI;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIJ,KAAK,CAACK,YAFV,CAFJ,CADJ,eAQI;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACIL,KAAK,CAACM,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA6B,GAA7B,GAAmC,EADvC,CADJ,EAKIP,KAAK,CAACM,SAAN,CAAgBE,GAAhB,CAAoBC,OAAO,iBACvB;AAAG,EAAA,GAAG,EACFA,OAAO,CAACC,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIID,OAAO,CAACE,IAJZ,CADJ,CALJ,MARJ,eAsBI;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACId,QAAQ,CAACG,KAAK,CAACY,OAAP,CADZ,MAFJ,CAtBJ,CATJ,CAVJ,CAHJ,CAFJ;;AA4DA,eAAeb,SAAf","sourcesContent":["import React from 'react';\nimport NoImage from '../images/no_image.jpg';\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\nimport MovieThumb from './MovieThumb';\nimport {SMovieInfo} from '../styles/SMovieInfo';\nimport {calcTime} from '../../helpers';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({movie}) => (\n\n    <SMovieInfo backdrop={\n        movie.backdrop_path\n    }>\n        <div className=\"movieinfo-content\">\n            <div className=\"movieinfo-thumb\">\n                <MovieThumb image={\n                        movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${\n                            movie.poster_path\n                        }` : NoImage\n                    }\n                    clickable={false}\n                    alt=\"moviethumb\"/>\n            </div>\n            <div className=\"movieinfo-text\">\n                <h1>{\n                    movie.title\n                }</h1>\n                <h3>Overview</h3>\n                <p>{\n                    movie.overview\n                }</p>\n\n                <div className=\"rating-director-time\">\n                    <div>\n                        <h3>IMDB Rating</h3>\n                        <div className=\"score\">\n                            {\n                            movie.vote_average\n                        }</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>Director{\n                            movie.directors.length > 1 ? 'S' : ''\n                        }</h3>\n                        {\n                        movie.directors.map(element => (\n                            <p key={\n                                element.credit_id\n                            }>\n                                {\n                                element.name\n                            }</p>\n                        ))\n                    } </div>\n                    <div className=\"time\">\n                        <h3>Duration</h3>\n                        <div> {\n                            calcTime(movie.runtime)\n                        } </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </SMovieInfo>\n);\n\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}
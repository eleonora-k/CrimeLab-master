{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      const directors = creditsResult.crew.filter(member => member.job === 'Director');\n      setState({ ...result,\n        actors: creditsResult.cast,\n        directors\n      });\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }, [movieId]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [state, loading, error];\n};","map":{"version":3,"sources":["/Users/eleonorakurilchik/Desktop/CrimeLab-master/src/components/hooks/useMovieFetch.js"],"names":["useState","useEffect","useCallback","API_URL","API_KEY","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchData","endpoint","result","fetch","json","creditsEndpoint","creditsResult","directors","crew","filter","member","job","actors","cast"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AAEA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMa,SAAS,GAAGX,WAAW,CAAC,YAAY;AACtCU,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMI,QAAQ,GAAI,GAAEX,OAAQ,SAAQG,OAAQ,YAAWF,OAAQ,EAA/D;AACA,YAAMW,MAAM,GAAG,MAAK,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAApB;AACA,YAAMC,eAAe,GAAI,GAAEf,OAAQ,SAAQG,OAAQ,oBAAmBF,OAAQ,EAA9E;AACA,YAAMe,aAAa,GAAG,MAAK,CAAC,MAAMH,KAAK,CAACE,eAAD,CAAZ,EAA+BD,IAA/B,EAA3B;AACA,YAAMG,SAAS,GAAGD,aAAa,CAACE,IAAd,CAAmBC,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UAAnD,CAAlB;AAEAhB,MAAAA,QAAQ,CAAC,EACL,GAAGO,MADE;AAELU,QAAAA,MAAM,EAAEN,aAAa,CAACO,IAFjB;AAGLN,QAAAA;AAHK,OAAD,CAAR;AAMH,KAbD,CAaE,OAAOT,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GArB4B,EAqB1B,CAACJ,OAAD,CArB0B,CAA7B;AAuBAL,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,SAAO,CAACN,KAAD,EAAQE,OAAR,EAAiBE,KAAjB,CAAP;AACH,CAjCM","sourcesContent":["import {useState, useEffect, useCallback} from 'react';\nimport {API_URL, API_KEY} from '../../config';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const fetchData = useCallback(async () => {\n        setError(false);\n        setLoading(true);\n\n        try {\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n            const result = await(await fetch(endpoint)).json();\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            const creditsResult = await(await fetch(creditsEndpoint)).json();\n            const directors = creditsResult.crew.filter(member => member.job === 'Director');\n\n            setState({\n                ...result,\n                actors: creditsResult.cast,\n                directors\n            })\n\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    }, [movieId])\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData])\n\n    return [state, loading, error];\n}\n"]},"metadata":{},"sourceType":"module"}
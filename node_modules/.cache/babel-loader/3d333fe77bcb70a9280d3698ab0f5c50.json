{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({\n    movies: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({ ...prev,\n        movies: [...result.results],\n        heroImage: prev.heroImage,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\n  }, []);\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["/Users/eleonorakurilchik/my-app/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","API_URL","API_KEY","useHomeFetch","state","setState","movies","loading","setLoading","error","setError","fetchMovies","endpoint","result","fetch","json","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAACO,IAAAA,MAAM,EAAE;AAAT,GAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,WAAW,GAAG,MAAMC,QAAN,IAAkB;AAClCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMK,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAArB;AACAV,MAAAA,QAAQ,CAACW,IAAI,KAAK,EACd,GAAGA,IADW;AAEdV,QAAAA,MAAM,EAAE,CAAC,GAAGO,MAAM,CAACI,OAAX,CAFM;AAGdC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAHF;AAIdC,QAAAA,WAAW,EAAEN,MAAM,CAACO,IAJN;AAKdC,QAAAA,UAAU,EAAER,MAAM,CAACS;AALL,OAAL,CAAL,CAAR;AAOH,KATD,CASE,OAAMb,KAAN,EAAY;AACVC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACH;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD;;AAoBAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW,CAAE,GAAEV,OAAQ,yBAAwBC,OAAQ,EAA5C,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAAC;AAACE,IAAAA,KAAD;AAAQG,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAD,EAA0BE,WAA1B,CAAP;AACH,CA9BM","sourcesContent":["import {useState, useEffect} from 'react';\nimport {API_URL, API_KEY} from '../../config';\n\nexport const useHomeFetch = () => {\n    const [state, setState] = useState({movies: []});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const fetchMovies = async endpoint => {\n        setError(false);\n        setLoading(true);\n\n        try {\n            const result = await (await fetch(endpoint)).json();\n            setState(prev => ({\n                ...prev, \n                movies: [...result.results],\n                heroImage: prev.heroImage,\n                currentPage: result.page, \n                totalPages: result.total_pages,\n            })) \n        } catch(error){\n            setError(true);\n            console.log(error);\n        }\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\n    }, [])\n\n    return [{state, loading, error}, fetchMovies];\n}"]},"metadata":{},"sourceType":"module"}